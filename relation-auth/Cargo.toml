[package]
name = "relation_auth"
version = "0.1.0"
authors = ["ic-one authors"]
readme = "README.md"
edition = "2018"
# Setting package to false to prevent accidental publishing of
# code to crates.io, as described here:
# https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish--field-optional
publish = false

[lib]
crate-type = ["cdylib"]

[dependencies]
# ic dependencies
ic-cdk = "0.3"
ic-cdk-macros = "0.3"
ic-certified-map = "0.3.0"
#ic-agent = "0.14.0"
#ring = "0.16.20"
#
thiserror = "1.0"
once_cell = "1.9"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.79"
serde_bytes = "0.11"
serde_cbor = "0.11"
strum = { version = "0.23", features = ["derive"] }
hex = "0.4.3"
# https://github.com/RustCrypto/hashes sha2, sha3 (Keccak)
sha2 = "0.10.2"
sha3 = "0.10.1"

# K-256 (secp256k1 elliptic curve library written in pure Rust with support for ECDSA signing/verification)
# https://github.com/RustCrypto/elliptic-curves
# sign/verify signatures will want to enable the ecdsa and sha256 Cargo features.
k256 = { version = "0.10.2", default-features = false, features = ["ecdsa", "ecdsa-core", "sha256", "keccak256", "arithmetic"] }

# libsecp256k1 (Pure Rust implementation of the secp256k1)
# Rust port of https://github.com/bitcoin-core/secp256k1 (c-library)
libsecp256k1 = { version = "0.7.0", default-features = false, features = ["hmac", "static-context"] }
tiny-keccak = { version = "2.0", features = ["keccak"] }

# sr25519
hex-literal = "0.3.3"
#rand = "0.7"
schnorrkel = "0.9.1"
getrandom = { version = "0.2", features = ["js"] }

#ss58
ss58-registry = "1.18.0"

# ed25519
ed25519 = ">=1, <1.4"
ed25519-dalek = "1.0.1"
#ed25519-compact = "0.1"

#jwt
jwt = "0.16.0"
hmac = "0.12.1"

# HTTP API & JWT: ES256 support
chrono = "0.4"
fluent-uri = "0.1.3"
# suppose to be replace all other jwt crates in future for better maintaince
nano-jwt = { git = "ssh://git@github.com/relationlabs/relation-nano-jwt.git" }

[profile.release]
debug = false # stripped by ic-cdk-optimizer anyway
lto = true
opt-level = 'z'